TASK 1
======

namespace CustomerCommLib
{
    
    public interface IMailSender
    {
        bool SendMail(string toAddress, string message);
    }
}



using System.Net;
using System.Net.Mail;

namespace CustomerCommLib
{
  
    public class MailSender : IMailSender
    {
        public bool SendMail(string toAddress, string message)
        {
            
            try
            {
                MailMessage mail = new MailMessage();
                SmtpClient SmtpServer = new SmtpClient("smtp.gmail.com");

                mail.From = new MailAddress("your_email_address@gmail.com");
                mail.To.Add(toAddress);
                mail.Subject = "Test Mail";
                mail.Body = message;

                SmtpServer.Port = 587;
                SmtpServer.Credentials = new NetworkCredential("username", "password");
                SmtpServer.EnableSsl = true;

                SmtpServer.Send(mail);

                return true;
            }
            catch (SmtpException ex)
            {
               
                return false;
            }
        }
    }
}



namespace CustomerCommLib
{
    
    public class CustomerComm
    {
        private readonly IMailSender _mailSender;

        /// <summary>
        * The dependency (IMailSender) is injected through the constructor.
        * This allows us to pass a real MailSender in production and a mock object during testing.
        * </summary>
        * <param name="mailSender">An object that implements the IMailSender interface.</param>
        public CustomerComm(IMailSender mailSender)
        {
            _mailSender = mailSender;
        }

        public bool SendMailToCustomer()
        {
           
            string customerEmail = "cust123@abc.com";
            string message = "Some Message";

            bool mailSent = _mailSender.SendMail(customerEmail, message);

            return mailSent;
        }
    }
}
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

TASk 2
======
 

using NUnit.Framework;
using Moq;
using CustomerCommLib;

namespace CustomerComm.Tests
{
    
    public class CustomerCommTests
    {
        private Mock<IMailSender> _mockMailSender;
        private CustomerComm _customerComm;

    
      
        public void Setup()
        {
           
            _mockMailSender = new Mock<IMailSender>();
            
           
            _mockMailSender.Setup(m => m.SendMail(It.IsAny<string>(), It.IsAny<string>()))
                           .Returns(true);

           
            
            _customerComm = new CustomerComm(_mockMailSender.Object);
        }

        
      
        public void SendMailToCustomer_WhenMailIsSentSuccessfully_ShouldReturnTrue()
      
           

            
            bool result = _customerComm.SendMailToCustomer();

         
            Assert.IsTrue(result, "The SendMailToCustomer method should return true when the mail is sent successfully.");

       
            _mockMailSender.Verify(m => m.SendMail(It.IsAny<string>(), It.IsAny<string>()), Times.Once);
        }
    }
}


